% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_simulator.R
\name{initialize_simulator}
\alias{initialize_simulator}
\title{Creates space-time birth-death poisson point process simulation with given parameters.}
\usage{
initialize_simulator(
  area_length_x,
  area_length_y,
  area_length_z,
  cell_count_x = 100,
  cell_count_y = 100,
  cell_count_z = 100,
  periodic = TRUE,
  b = 1,
  d = 0,
  dd,
  seed = 1234L,
  initial_population_x,
  initial_population_y,
  initial_population_z,
  death_r,
  death_y,
  birth_ircdf_y,
  realtime_limit = 1e+06,
  ndim = 1
)
}
\arguments{
\item{area_length_x}{Length of simulated area by x axis}

\item{area_length_y}{Length of simulated area by y axis}

\item{area_length_z}{Length of simulated area by z axis}

\item{cell_count_x}{Internal parameter for simulation speed-up}

\item{cell_count_y}{Internal parameter for simulation speed-up}

\item{cell_count_z}{Internal parameter for simulation speed-up}

\item{periodic}{Specifies whether to use periodic or killing boundary condition}

\item{b}{Birth rate}

\item{d}{Death rate}

\item{dd}{Competitive death rate}

\item{seed}{Simulation RNG seed}

\item{initial_population_x}{Coordinates of initial population, x axis}

\item{initial_population_y}{Coordinates of initial population, y axis}

\item{initial_population_z}{Coordinates of initial population, z axis}

\item{death_r}{Max radius of death interaction}

\item{death_y}{Values of death kernel on uniform grid from 0 to death_r}

\item{birth_ircdf_y}{Inverse radial cumulative distribution function used in birth simulation. 
Used to get random variable that corresponds to displacement distance on birth}

\item{realtime_limit}{Limit on simulation lifetime in seconds}

\item{ndim}{Dimension count, only 1, 2 and 3 supported}
}
\value{
Simulator object with methods for running
}
\description{
Length of simulation area should be large enough for birth and death kernels.
Requires birth rate to be greater than death rate.
Death kernel should be specified as a pair of max death interaction radius
and values of death kernel on uniform grid.
Birth kernel should be specified as a inverse cumulative distribution function 
(function of quantiles) of radius-distribution. In 1d case for normal distributions,
quantiles of normal distribution could be used. In 2d and 3d case, Rayleigh and Maxwell 
distribution quantiles are required.
}
\examples{
sim<-initialize_simulator(area_length_x = 100, dd=0.01,
                          initial_population_x = c(10),
                          death_r = 5,
                          death_y = dnorm(seq(0,5,length.out = 1001), sd = 1),
                          birth_ircdf_y = qnorm(seq(0.5,1-1e-6,length.out = 101), sd = 0.2),
                          realtime_limit = 60)
# Runs 1d simulator for a million events or 60 seconds maximum                          
sim$run_events(1e6)
# Shows population in the end of simulation
sim$total_population
}
